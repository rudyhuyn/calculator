<UserControl x:Class="CalculatorApp.GraphingCalculator"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
             xmlns:controls="using:CalculatorApp.Controls"
             xmlns:converters="using:CalculatorApp.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:graphControl="using:GraphControl"
             xmlns:local="using:CalculatorApp"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:CalculatorApp.ViewModel"
             x:Name="Control"
             DataContextChanged="GraphingCalculator_DataContextChanged"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="GraphButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="Background" Value="{ThemeResource AppControlTransparentButtonBackgroundBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="{StaticResource CaptionFontSize}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Background="{TemplateBinding Background}"
                                              BorderBrush="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontWeight="SemiBold"
                                              AutomationProperties.AccessibilityView="Raw"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Background" Value="{ThemeResource AppControlHoverButtonFaceBrush}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AppControlForegroundAccentBrush}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Background" Value="{ThemeResource AppControlPressedButtonFaceBrush}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AppControlForegroundAccentBrush}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GraphRepeatButtonStyle" TargetType="RepeatButton">
                <Setter Property="Background" Value="{ThemeResource AppControlTransparentButtonBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{ThemeResource RepeatButtonForeground}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Delay" Value="500"/>
                <Setter Property="Interval" Value="40"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                <Setter Property="FocusVisualMargin" Value="-3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              AutomationProperties.AccessibilityView="Raw"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              CornerRadius="{TemplateBinding CornerRadius}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>

                                        <VisualState x:Name="PointerOver">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlHoverButtonFaceBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlForegroundAccentBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlHoverButtonFaceBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlForegroundAccentBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Disabled">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlTransparentButtonBackgroundBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RepeatButtonBorderBrushDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RepeatButtonForegroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SwitchModeToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundTransparentBrush}"/>
                <Setter Property="BorderBrush" Value="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="{ThemeResource ButtonPadding}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
                <Setter Property="FocusVisualMargin" Value="-3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="RootGrid"
                                  Background="{TemplateBinding Background}"
                                  CornerRadius="{TemplateBinding CornerRadius}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource AppControlHoverButtonFaceBrush}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource AppControlPressedButtonFaceBrush}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundDisabled}"/>
                                                <Setter Target="ContentPresenter.Opacity" Value="0.5"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushChecked}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemAccentColor}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource AppControlHoverButtonFaceBrush}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemAccentColor}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource AppControlPressedButtonFaceBrush}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemAccentColor}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundDisabled}"/>
                                                <Setter Target="ContentPresenter.Opacity" Value="0.5"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemAccentColor}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminate}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminate}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminate}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminatePointerOver}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePointerOver}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePointerOver}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminatePressed">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminatePressed}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminatePressed}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminatePressed}"/>
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="IndeterminateDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="RootGrid.Background" Value="{ThemeResource ToggleButtonRevealBackgroundIndeterminateDisabled}"/>
                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ToggleButtonRevealBorderBrushIndeterminateDisabled}"/>
                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ToggleButtonForegroundIndeterminateDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  AutomationProperties.AccessibilityView="Raw"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <converters:BooleanToVisibilityConverter x:Name="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityNegationConverter x:Name="BooleanToVisibilityNegationConverter"/>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <Style x:Key="ThemedSwitchModeToggleButtonStyle"
                           BasedOn="{StaticResource SwitchModeToggleButtonStyle}"
                           TargetType="ToggleButton"/>
                </ResourceDictionary>
                <ResourceDictionary x:Key="Dark">
                    <Style x:Key="ThemedSwitchModeToggleButtonStyle"
                           BasedOn="{StaticResource SwitchModeToggleButtonStyle}"
                           TargetType="ToggleButton"/>
                </ResourceDictionary>
                <ResourceDictionary x:Key="HighContrast">
                    <Style x:Key="ThemedSwitchModeToggleButtonStyle" TargetType="ToggleButton"/>
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="RootGrid">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="RowHamburger" Height="{StaticResource HamburgerHeightGridLength}"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="ColumnsState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="SmallState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Control.IsSmallState" Value="True"/>
                        <Setter Target="LeftGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="RightGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="RightGrid.(Grid.Column)" Value="0"/>
                        <Setter Target="SwitchModeToggleButton.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!-- Top panel -->
        <Grid Grid.ColumnSpan="2">
            <ToggleButton x:Name="SwitchModeToggleButton"
                          x:Uid="SwitchModeToggleButton"
                          Margin="0,2,4,2"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Stretch"
                          Style="{ThemeResource ThemedSwitchModeToggleButtonStyle}"
                          AutomationProperties.AutomationId="SwitchModeToggleButton"
                          AutomationProperties.Name="{x:Bind GetInfoForSwitchModeToggleButton(SwitchModeToggleButton.IsChecked.Value), Mode=OneWay}"
                          Checked="SwitchModeToggleButton_Checked"
                          ToolTipService.ToolTip="{x:Bind GetInfoForSwitchModeToggleButton(SwitchModeToggleButton.IsChecked.Value), Mode=OneWay}"
                          Unchecked="SwitchModeToggleButton_Checked"
                          Visibility="Collapsed">
                <!-- TODO: update this icon -->
                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph=""/>
            </ToggleButton>
        </Grid>
        <!-- Left portion of the screen -->
        <Grid x:Name="LeftGrid"
              Grid.Row="1"
              Visibility="{x:Bind ShouldDisplayPanel(IsSmallState, SwitchModeToggleButton.IsChecked.Value, x:True), Mode=OneWay}">
            <Grid Grid.Row="0" Margin="0,4,0,0">
                <graphControl:Grapher Name="GraphingControl"
                                      ForceProportionalAxes="True"
                                      LosingFocus="GraphingControl_LosingFocus"
                                      LostFocus="GraphingControl_LostFocus"
                                      UseSystemFocusVisuals="True"
                                      VariablesUpdated="GraphingControl_VariablesUpdated">
                    <graphControl:Grapher.Background>
                        <SolidColorBrush Color="White" />
                    </graphControl:Grapher.Background>
                </graphControl:Grapher>

                <StackPanel Margin="0,12,12,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Orientation="Horizontal">

                    <!-- Temporary button until the final UI is created -->
                    <Button x:Name="VariableEditing"
                            MinWidth="44"
                            MinHeight="44"
                            Margin="0,0,4,0"
                            Style="{StaticResource GraphButtonStyle}"
                            RequestedTheme="Light">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE70F;"/>
                        <Button.Flyout>
                            <Flyout Placement="BottomEdgeAlignedLeft">
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="RequestedTheme" Value="Default"/>
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                        <Setter Property="Margin" Value="0,0,0,0"/>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <ListView x:Name="VariableListView"
                                          MinWidth="300"
                                          ItemsSource="{x:Bind ViewModel.Variables}"
                                          SelectionMode="None">
                                    <ListView.Resources>
                                        <ResourceDictionary>
                                            <ResourceDictionary.ThemeDictionaries>
                                                <ResourceDictionary x:Key="Default">
                                                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="Transparent"/>
                                                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="Transparent"/>
                                                    <SolidColorBrush x:Key="TextControlForegroundFocused" Color="White"/>
                                                    <x:Double x:Key="TextControlThemeMinWidth">32</x:Double>
                                                    <x:Double x:Key="TextControlThemeMinHeight">16</x:Double>
                                                </ResourceDictionary>
                                                <ResourceDictionary x:Key="Light">
                                                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="Transparent"/>
                                                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="Transparent"/>
                                                    <SolidColorBrush x:Key="TextControlForegroundFocused" Color="Black"/>
                                                    <x:Double x:Key="TextControlThemeMinWidth">32</x:Double>
                                                    <x:Double x:Key="TextControlThemeMinHeight">16</x:Double>
                                                </ResourceDictionary>
                                                <ResourceDictionary x:Key="HighContrast">
                                                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="{ThemeResource SystemColorButtonFaceColor}"/>
                                                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="{StaticResource SystemColorButtonFaceColor}"/>
                                                    <SolidColorBrush x:Key="TextControlForegroundFocused" Color="{ThemeResource SystemColorButtonTextColor}"/>
                                                    <x:Double x:Key="TextControlThemeMinWidth">32</x:Double>
                                                    <x:Double x:Key="TextControlThemeMinHeight">16</x:Double>
                                                </ResourceDictionary>
                                            </ResourceDictionary.ThemeDictionaries>
                                        </ResourceDictionary>
                                    </ListView.Resources>
                                    <ListView.Header>
                                        <TextBlock x:Uid="VaiablesHeader" Margin="0,0,0,12"/>
                                    </ListView.Header>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            <Setter Property="Margin" Value="0,0,0,12"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>

                                    <ListView.ItemTemplate>
                                        <DataTemplate x:DataType="vm:VariableViewModel">
                                            <StackPanel>
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Padding="0,0,0,8"
                                                               VerticalAlignment="Bottom"
                                                               Text="{x:Bind Name}"/>
                                                    <TextBox x:Name="ValueTextBox"
                                                             Grid.Column="1"
                                                             HorizontalAlignment="Left"
                                                             Style="{StaticResource VariableTextBoxStyle}"
                                                             GotFocus="TextBoxGotFocus"
                                                             KeyDown="TextBoxKeyDown"
                                                             LosingFocus="TextBoxLosingFocus"
                                                             Text="{x:Bind Value, Mode=OneWay}"/>
                                                    <ToggleButton Grid.Column="2"
                                                                  HorizontalAlignment="Right"
                                                                  Background="Transparent"
                                                                  FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                                  Content="&#xE713;"
                                                                  IsChecked="{x:Bind SliderSettingsVisible, Mode=TwoWay}">
                                                        <ToggleButton.Resources>
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="Transparent"/>
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent"/>
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="Transparent"/>
                                                            <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="Transparent"/>
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="Transparent"/>
                                                            <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="Transparent"/>
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="Transparent"/>
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{ThemeResource SystemAccentColor}"/>
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{ThemeResource SystemAccentColor}"/>
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{ThemeResource SystemAccentColor}"/>
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{ThemeResource SystemAccentColor}"/>
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{ThemeResource SystemAccentColor}"/>
                                                            <x:Double x:Key="TextControlThemeMinWidth">32</x:Double>
                                                        </ToggleButton.Resources>
                                                    </ToggleButton>
                                                </Grid>
                                                <Slider MinHeight="38"
                                                        Maximum="{x:Bind Max, Mode=TwoWay}"
                                                        Minimum="{x:Bind Min, Mode=TwoWay}"
                                                        StepFrequency="{x:Bind Step, Mode=TwoWay}"
                                                        Visibility="{x:Bind SliderSettingsVisible, Converter={StaticResource BooleanToVisibilityNegationConverter}, Mode=OneWay}"
                                                        Value="{x:Bind Value, Mode=TwoWay}"/>
                                                <Grid Grid.Row="1"
                                                      MinHeight="38"
                                                      HorizontalAlignment="Stretch"
                                                      Visibility="{x:Bind SliderSettingsVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock x:Uid="MinTextBlock"
                                                                   Padding="0,0,0,8"
                                                                   VerticalAlignment="Bottom"
                                                                   FontWeight="SemiBold"/>
                                                        <TextBox x:Name="MinTextBox"
                                                                 MaxWidth="96"
                                                                 Style="{StaticResource VariableTextBoxStyle}"
                                                                 GotFocus="TextBoxGotFocus"
                                                                 KeyDown="TextBoxKeyDown"
                                                                 LosingFocus="TextBoxLosingFocus"
                                                                 Text="{x:Bind Min, Mode=OneWay}"/>
                                                    </StackPanel>
                                                    <StackPanel Grid.Column="1"
                                                                HorizontalAlignment="Center"
                                                                Orientation="Horizontal">
                                                        <TextBlock x:Uid="StepTextBlock"
                                                                   Padding="0,0,0,8"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Bottom"
                                                                   FontWeight="SemiBold"/>
                                                        <TextBox x:Name="StepTextBox"
                                                                 MaxWidth="96"
                                                                 HorizontalAlignment="Center"
                                                                 Style="{StaticResource VariableTextBoxStyle}"
                                                                 GotFocus="TextBoxGotFocus"
                                                                 KeyDown="TextBoxKeyDown"
                                                                 LosingFocus="TextBoxLosingFocus"
                                                                 Text="{x:Bind Step, Mode=OneWay}"/>
                                                    </StackPanel>
                                                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                                                        <TextBlock x:Uid="MaxTextBlock"
                                                                   Padding="0,0,0,8"
                                                                   VerticalAlignment="Bottom"
                                                                   FontWeight="SemiBold"/>
                                                        <TextBox x:Name="MaxTextBox"
                                                                 MaxWidth="96"
                                                                 Style="{StaticResource VariableTextBoxStyle}"
                                                                 GotFocus="TextBoxGotFocus"
                                                                 KeyDown="TextBoxKeyDown"
                                                                 LosingFocus="TextBoxLosingFocus"
                                                                 Text="{x:Bind Max, Mode=OneWay}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button x:Name="ActiveTracing"
                            MinWidth="44"
                            MinHeight="44"
                            Margin="0,0,4,0"
                            Style="{StaticResource GraphButtonStyle}"
                            Click="OnActiveTracingClick"
                            RequestedTheme="Light">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE73F;"/>
                    </Button>

                    <Button x:Name="Share"
                            MinWidth="44"
                            MinHeight="44"
                            Margin="0"
                            Style="{StaticResource GraphButtonStyle}"
                            Click="OnShareClick"
                            RequestedTheme="Light">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE72D;"/>
                    </Button>
                </StackPanel>

                <StackPanel Grid.Row="0"
                            Margin="0,0,12,12"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Orientation="Vertical">

                    <RepeatButton x:Uid="zoomInButton"
                                  MinWidth="44"
                                  MinHeight="44"
                                  Margin="0,0,0,4"
                                  Style="{ThemeResource GraphRepeatButtonStyle}"
                                  FontFamily="{StaticResource SymbolThemeFontFamily}"
                                  AutomationProperties.AutomationId="zoomInButton"
                                  Command="{x:Bind ZoomInButtonPressed, Mode=OneTime}"
                                  RequestedTheme="Light">
                        <Grid>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                                      FontSize="26"
                                      FontWeight="ExtraLight"
                                      Glyph="&#xEA3A;"/>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                                      FontSize="16"
                                      Glyph="&#xE710;"/>
                        </Grid>
                    </RepeatButton>

                    <RepeatButton x:Uid="zoomOutButton"
                                  MinWidth="44"
                                  MinHeight="44"
                                  Margin="0,0,0,4"
                                  Style="{ThemeResource GraphRepeatButtonStyle}"
                                  FontFamily="{StaticResource SymbolThemeFontFamily}"
                                  AutomationProperties.AutomationId="zoomOutButton"
                                  Command="{x:Bind ZoomOutButtonPressed, Mode=OneTime}"
                                  RequestedTheme="Light">
                        <Grid>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                                      FontSize="26"
                                      FontWeight="ExtraLight"
                                      Glyph="&#xEA3A;"/>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                                      FontSize="16"
                                      Glyph="&#xE738;"/>
                        </Grid>
                    </RepeatButton>

                    <Button x:Uid="zoomResetButton"
                            MinWidth="44"
                            MinHeight="44"
                            Margin="0,0,0,0"
                            Style="{ThemeResource GraphButtonStyle}"
                            AutomationProperties.AutomationId="zoomResetButton"
                            Command="{x:Bind ZoomResetButtonPressed, Mode=OneTime}"
                            RequestedTheme="Light">
                        <Grid>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                                      FontSize="26"
                                      FontWeight="ExtraLight"
                                      Glyph="&#xEA3A;"/>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                                      FontSize="16"
                                      Glyph="&#xE895;"/>
                        </Grid>

                    </Button>
                </StackPanel>

                <Border x:Name="TraceValuePopup"
                        Padding="{ThemeResource ToolTipBorderThemePadding}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="{ThemeResource ToolTipBackground}"
                        BorderBrush="{ThemeResource ToolTipBorderBrush}"
                        BorderThickness="{ThemeResource ToolTipBorderThemeThickness}"
                        contract7Present:BackgroundSizing="OuterBorderEdge"
                        IsHitTestVisible="False"
                        SizeChanged="TraceValuePopup_SizeChanged"
                        Visibility="Collapsed">
                    <Border.RenderTransform>
                        <TranslateTransform x:Name="TraceValuePopupTransform"/>
                    </Border.RenderTransform>
                    <TextBlock x:Name="TraceValue"
                               Foreground="{ThemeResource ToolTipForeground}"
                               Text="x=0,y=0"/>
                </Border>
            </Grid>

        </Grid>

        <!-- Right portion of the screen -->
        <Grid x:Name="RightGrid"
              Grid.Row="1"
              Grid.RowSpan="2"
              Grid.Column="1"
              Visibility="{x:Bind ShouldDisplayPanel(IsSmallState, SwitchModeToggleButton.IsChecked.Value, x:False), Mode=OneWay}">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>

            <!-- Ideally the KeyGraphFeaturesPanel should be a frame so that navigation to and from the panel could be handled nicely -->
            <local:KeyGraphFeaturesPanel x:Name="KeyGraphFeaturesControl"
                                         Grid.RowSpan="2"
                                         x:Load="{x:Bind IsKeyGraphFeaturesVisible, Mode=OneWay}"
                                         KeyGraphFeaturesClosed="OnKeyGraphFeaturesClosed"
                                         ViewModel="{x:Bind EquationInputAreaControl.EquationVM, Mode=OneWay}"
                                         Visibility="{x:Bind IsKeyGraphFeaturesVisible, Mode=OneWay}"/>

            <!-- This control should be within a grid that limits the hight to keep the sticky footer functionality from breaking -->
            <local:EquationInputArea x:Name="EquationInputAreaControl"
                                     Margin="0,4,0,0"
                                     Equations="{x:Bind ViewModel.Equations}"
                                     KeyGraphFeaturesRequested="OnEquationKeyGraphFeaturesRequested"
                                     Visibility="{x:Bind IsKeyGraphFeaturesVisible, Converter={StaticResource BooleanToVisibilityNegationConverter}, Mode=OneWay}"/>

            <Grid x:Name="ButtonContainerGrid"
                  Grid.Row="1"
                  Margin="2,0,2,2"
                  UseLayoutRounding="False"
                  Visibility="{x:Bind IsKeyGraphFeaturesVisible, Converter={StaticResource BooleanToVisibilityNegationConverter}, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <controls:CalculatorButton x:Name="XButton"
                                           x:Uid="xButton"
                                           Grid.Row="0"
                                           Grid.Column="0"
                                           Style="{StaticResource OperatorButtonStyle}"
                                           FontSize="16"
                                           ButtonId="X"
                                           Content="𝑥"
                                           FlowDirection="LeftToRight"/>
                <controls:CalculatorButton x:Name="YButton"
                                           x:Uid="yButton"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           Style="{StaticResource OperatorButtonStyle}"
                                           FontSize="16"
                                           ButtonId="Y"
                                           Content="𝑦"
                                           FlowDirection="LeftToRight"/>
                <controls:CalculatorButton x:Name="PowerButton"
                                           x:Uid="graphingPowerButton"
                                           Grid.Row="0"
                                           Grid.Column="2"
                                           Style="{StaticResource OperatorButtonStyle}"
                                           ButtonId="XPowerY"
                                           Content="^"/>
                <controls:CalculatorButton x:Name="squareRootButton"
                                           x:Uid="squareRootButton"
                                           Grid.Row="0"
                                           Grid.Column="3"
                                           Style="{StaticResource SymbolOperatorButtonStyle}"
                                           FontFamily="{StaticResource SymbolThemeFontFamily}"
                                           ButtonId="Sqrt"
                                           Content="&#xE94B;"/>

                <!-- Display controls -->
                <controls:CalculatorButton x:Name="ClearButton"
                                           x:Uid="clearButton"
                                           Grid.Row="1"
                                           Grid.Column="2"
                                           Style="{StaticResource OperatorButtonStyle}"
                                           FontSize="16"
                                           ButtonId="Clear"
                                           Content="C"/>
                <controls:CalculatorButton x:Name="BackSpaceButton"
                                           x:Uid="backSpaceButton"
                                           Grid.Row="1"
                                           Grid.Column="3"
                                           Style="{StaticResource SymbolOperatorButtonStyle}"
                                           FontSize="16"
                                           ButtonId="Backspace"
                                           Content="&#xE94F;"/>

                <!-- Basic operators -->
                <controls:CalculatorButton x:Name="EqualButton"
                                           x:Uid="graphingEqualButton"
                                           Grid.Row="0"
                                           Grid.Column="4"
                                           Style="{StaticResource AccentCalcButtonStyle}"
                                           ButtonId="Equals"
                                           Content="&#xE94E;"/>
                <controls:CalculatorButton x:Name="DivideButton"
                                           x:Uid="divideButton"
                                           Grid.Row="1"
                                           Grid.Column="4"
                                           Style="{StaticResource AccentCalcButtonStyle}"
                                           ButtonId="Divide"
                                           Content="&#xE94A;"/>
                <controls:CalculatorButton x:Name="MultiplyButton"
                                           x:Uid="multiplyButton"
                                           Grid.Row="2"
                                           Grid.Column="4"
                                           Style="{StaticResource AccentCalcButtonStyle}"
                                           ButtonId="Multiply"
                                           Content="&#xE947;"/>
                <controls:CalculatorButton x:Name="MinusButton"
                                           x:Uid="minusButton"
                                           Grid.Row="3"
                                           Grid.Column="4"
                                           Style="{StaticResource AccentCalcButtonStyle}"
                                           ButtonId="Subtract"
                                           Content="&#xE949;"/>
                <controls:CalculatorButton x:Name="PlusButton"
                                           x:Uid="plusButton"
                                           Grid.Row="4"
                                           Grid.Column="4"
                                           Style="{StaticResource AccentCalcButtonStyle}"
                                           ButtonId="Add"
                                           Content="&#xE948;"/>


                <controls:CalculatorButton x:Name="logBase10Button"
                                           x:Uid="logBase10Button"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           Style="{StaticResource OperatorButtonStyle}"
                                           ButtonId="LogBase10"
                                           Content="log"/>
                <controls:CalculatorButton x:Name="logBaseEButton"
                                           x:Uid="logBaseEButton"
                                           Grid.Row="1"
                                           Grid.Column="1"
                                           Style="{StaticResource OperatorButtonStyle}"
                                           ButtonId="LogBaseE"
                                           Content="ln"/>
                <controls:CalculatorButton x:Name="powerOf10Button"
                                           x:Uid="powerOf10Button"
                                           Grid.Row="2"
                                           Grid.Column="0"
                                           Style="{StaticResource SymbolOperatorButtonStyle}"
                                           AutomationProperties.AutomationId="powerOf10Button"
                                           ButtonId="TenPowerX"
                                           Content="&#xF7CC;"/>
                <controls:CalculatorButton x:Name="powerOfEButton"
                                           x:Uid="powerOfEButton"
                                           Grid.Row="3"
                                           Grid.Column="0"
                                           Style="{StaticResource SymbolOperatorButtonStyle}"
                                           ButtonId="EPowerX"
                                           Content="&#xf7ce;"/>
                <controls:CalculatorButton x:Name="piButton"
                                           x:Uid="piButton"
                                           Grid.Row="4"
                                           Grid.Column="0"
                                           Style="{StaticResource SymbolOperatorButtonStyle}"
                                           FontSize="14"
                                           ButtonId="Pi"
                                           Content="&#xf7cf;"/>

                <controls:CalculatorButton x:Name="openParenthesisButton"
                                           x:Uid="openParenthesisButton"
                                           Grid.Row="5"
                                           Grid.Column="0"
                                           Style="{StaticResource ParenthesisCalcButtonStyle}"
                                           FontSize="19"
                                           ButtonId="OpenParenthesis"
                                           Content="("/>
                <controls:CalculatorButton x:Name="closeParenthesisButton"
                                           x:Uid="closeParenthesisButton"
                                           Grid.Row="5"
                                           Grid.Column="1"
                                           Style="{StaticResource OperatorButtonStyle}"
                                           FontSize="19"
                                           ButtonId="CloseParenthesis"
                                           Content=")"/>

                <!-- The Numberpad -->
                <local:NumberPad x:Name="NumberPad"
                                 x:Uid="NumberPad"
                                 Grid.Row="2"
                                 Grid.RowSpan="4"
                                 Grid.Column="1"
                                 Grid.ColumnSpan="3"
                                 ButtonStyle="{StaticResource NumericButtonStyle24}"/>

                <controls:CalculatorButton x:Name="PlotButton"
                                           x:Uid="plotButton"
                                           Grid.Row="5"
                                           Grid.Column="4"
                                           Style="{StaticResource AccentCalcButtonStyle}"
                                           FontFamily="{StaticResource SymbolThemeFontFamily}"
                                           ButtonId="Plot"
                                           Content="&#xE72A;"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
