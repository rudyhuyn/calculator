<UserControl
    x:Class="CalculatorApp.GraphingCalculator"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CalculatorApp.Controls"
    xmlns:converters="using:CalculatorApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:graphControl="using:GraphControl"
    xmlns:local="using:CalculatorApp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:CalculatorApp.ViewModel"
    DataContextChanged="GraphingCalculator_DataContextChanged"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="GraphButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="Background" Value="{ThemeResource AppControlTransparentButtonBackgroundBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="8" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="{StaticResource CaptionFontSize}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="SemiBold">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenter.Background" Value="{ThemeResource AppControlHoverButtonFaceBrush}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AppControlForegroundAccentBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenter.Background" Value="{ThemeResource AppControlPressedButtonFaceBrush}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource AppControlForegroundAccentBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GraphRepeatButtonStyle" TargetType="RepeatButton">
            <Setter Property="Background" Value="{ThemeResource AppControlTransparentButtonBackgroundBrush}" />
            <Setter Property="Foreground" Value="{ThemeResource RepeatButtonForeground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Delay" Value="500" />
            <Setter Property="Interval" Value="40" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AutomationProperties.AccessibilityView="Raw"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />

                                    <VisualState x:Name="PointerOver">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlHoverButtonFaceBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlForegroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Pressed">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlHoverButtonFaceBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlForegroundTransparentRevealBorderBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlForegroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Disabled">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppControlTransparentButtonBackgroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RepeatButtonBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RepeatButtonForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                        </ContentPresenter>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="AccentCalcButtonStyle"
            BasedOn="{StaticResource SymbolOperatorButtonStyle}"
            TargetType="controls:CalculatorButton">
            <Setter Property="HoverBackground" Value="{ThemeResource AppControlHighlightAccentRevealBackgroundBrush}" />
            <Setter Property="HoverForeground" Value="{ThemeResource SystemControlHighlightAltAltHighBrush}" />
            <Setter Property="PressBackground" Value="{ThemeResource AppControlBackgroundListAccentHighRevealBackgroundBrush}" />
            <Setter Property="PressForeground" Value="{ThemeResource SystemControlHighlightAltAltHighBrush}" />
        </Style>
        <converters:BooleanToVisibilityConverter x:Name="BooleanToVisibilityConverter" />
        <converters:BooleanToVisibilityNegationConverter x:Name="BooleanToVisibilityNegationConverter" />
    </UserControl.Resources>

    <Grid x:Name="RootGrid">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="RowHamburger" Height="{StaticResource HamburgerHeightGridLength}" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <!--  Left portion of the screen  -->
        <Grid
            x:Name="LeftGrid"
            Grid.Row="1"
            Grid.Column="0">
            <Grid Grid.Row="0" Margin="0,4,0,0">
                <graphControl:Grapher
                    Name="GraphingControl"
                    EquationsSource="{x:Bind ViewModel.Equations, Mode=OneWay}"
                    ForceProportionalAxes="True"
                    LosingFocus="GraphingControl_LosingFocus"
                    LostFocus="GraphingControl_LostFocus"
                    UseSystemFocusVisuals="True"
                    VariablesUpdated="GraphingControl_VariablesUpdated">
                    <graphControl:Grapher.Background>
                        <SolidColorBrush Color="White" />
                    </graphControl:Grapher.Background>
                    <graphControl:Grapher.EquationTemplate>
                        <DataTemplate x:DataType="vm:EquationViewModel">
                            <graphControl:Equation
                                AnalysisError="{x:Bind AnalysisError, Mode=TwoWay}"
                                Domain="{x:Bind Domain, Mode=TwoWay}"
                                Expression="{x:Bind Expression, Mode=OneWay}"
                                HorizontalAsymptotes="{x:Bind HorizontalAsymptotes, Mode=TwoWay}"
                                InflectionPoints="{x:Bind InflectionPoints, Mode=TwoWay}"
                                IsAnalysisUpdated="{x:Bind IsAnalysisUpdated, Mode=TwoWay}"
                                LineColor="{x:Bind LineColor, Mode=OneWay}"
                                Maxima="{x:Bind Maxima, Mode=TwoWay}"
                                Minima="{x:Bind Minima, Mode=TwoWay}"
                                Monotonicity="{x:Bind Monotonicity, Mode=TwoWay}"
                                ObliqueAsymptotes="{x:Bind ObliqueAsymptotes, Mode=TwoWay}"
                                Parity="{x:Bind Parity, Mode=TwoWay}"
                                PeriodicityDirection="{x:Bind PeriodicityDirection, Mode=TwoWay}"
                                PeriodicityExpression="{x:Bind PeriodicityExpression, Mode=TwoWay}"
                                Range="{x:Bind Range, Mode=TwoWay}"
                                TooComplexFeatures="{x:Bind TooComplexFeatures, Mode=TwoWay}"
                                VerticalAsymptotes="{x:Bind VerticalAsymptotes, Mode=TwoWay}"
                                XIntercept="{x:Bind XIntercept, Mode=TwoWay}"
                                YIntercept="{x:Bind YIntercept, Mode=TwoWay}" />
                        </DataTemplate>
                    </graphControl:Grapher.EquationTemplate>

                </graphControl:Grapher>

                <StackPanel
                    Grid.Row="0"
                    Margin="0,12,12,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">

                    <!--  Temporary button until the final UI is created  -->
                    <Button
                        x:Name="VariableEditing"
                        MinWidth="44"
                        MinHeight="44"
                        Margin="0,0,4,0"
                        RequestedTheme="Light"
                        Style="{StaticResource GraphButtonStyle}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE70F;" />
                        <Button.Flyout>
                            <Flyout Placement="BottomEdgeAlignedLeft">
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="RequestedTheme" Value="Default" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <ListView
                                    x:Name="VariableListView"
                                    MinWidth="300"
                                    ItemsSource="{x:Bind ViewModel.Variables}"
                                    SelectionMode="None">
                                    <ListView.Resources>
                                        <ResourceDictionary>
                                            <ResourceDictionary.ThemeDictionaries>
                                                <ResourceDictionary x:Key="Default">
                                                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="Transparent" />
                                                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="TextControlForegroundFocused" Color="White" />
                                                    <x:Double x:Key="TextControlThemeMinWidth">32</x:Double>
                                                    <x:Double x:Key="TextControlThemeMinHeight">16</x:Double>
                                                </ResourceDictionary>
                                                <ResourceDictionary x:Key="Light">
                                                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="Transparent" />
                                                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="Transparent" />
                                                    <SolidColorBrush x:Key="TextControlForegroundFocused" Color="Black" />
                                                    <x:Double x:Key="TextControlThemeMinWidth">32</x:Double>
                                                    <x:Double x:Key="TextControlThemeMinHeight">16</x:Double>
                                                </ResourceDictionary>
                                                <ResourceDictionary x:Key="HighContrast">
                                                    <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="{ThemeResource SystemColorButtonFaceColor}" />
                                                    <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="{StaticResource SystemColorButtonFaceColor}" />
                                                    <SolidColorBrush x:Key="TextControlForegroundFocused" Color="{ThemeResource SystemColorButtonTextColor}" />
                                                    <x:Double x:Key="TextControlThemeMinWidth">32</x:Double>
                                                    <x:Double x:Key="TextControlThemeMinHeight">16</x:Double>
                                                </ResourceDictionary>
                                            </ResourceDictionary.ThemeDictionaries>
                                        </ResourceDictionary>
                                    </ListView.Resources>
                                    <ListView.Header>
                                        <TextBlock x:Uid="VaiablesHeader" Margin="0,0,0,12" />
                                    </ListView.Header>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0,0,12" />
                                        </Style>
                                    </ListView.ItemContainerStyle>

                                    <ListView.ItemTemplate>
                                        <DataTemplate x:DataType="vm:VariableViewModel">
                                            <StackPanel>
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock
                                                        Padding="0,0,0,8"
                                                        VerticalAlignment="Bottom"
                                                        Text="{x:Bind Name}" />
                                                    <TextBox
                                                        x:Name="ValueTextBox"
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Left"
                                                        GotFocus="TextBoxGotFocus"
                                                        KeyDown="TextBoxKeyDown"
                                                        LosingFocus="TextBoxLosingFocus"
                                                        Style="{StaticResource VariableTextBoxStyle}"
                                                        Text="{x:Bind Value, Mode=OneWay}" />
                                                    <ToggleButton
                                                        Grid.Column="2"
                                                        HorizontalAlignment="Right"
                                                        Background="Transparent"
                                                        Content="&#xE713;"
                                                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                        IsChecked="{x:Bind SliderSettingsVisible, Mode=TwoWay}">
                                                        <ToggleButton.Resources>
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="Transparent" />
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="Transparent" />
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="Transparent" />
                                                            <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="Transparent" />
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="Transparent" />
                                                            <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="Transparent" />
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="Transparent" />
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{ThemeResource SystemAccentColor}" />
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{ThemeResource SystemAccentColor}" />
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{ThemeResource SystemAccentColor}" />
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{ThemeResource SystemAccentColor}" />
                                                            <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{ThemeResource SystemAccentColor}" />
                                                            <x:Double x:Key="TextControlThemeMinWidth">32</x:Double>
                                                        </ToggleButton.Resources>
                                                    </ToggleButton>
                                                </Grid>
                                                <Slider
                                                    MinHeight="38"
                                                    Maximum="{x:Bind Max, Mode=TwoWay}"
                                                    Minimum="{x:Bind Min, Mode=TwoWay}"
                                                    StepFrequency="{x:Bind Step, Mode=TwoWay}"
                                                    Visibility="{x:Bind SliderSettingsVisible, Converter={StaticResource BooleanToVisibilityNegationConverter}, Mode=OneWay}"
                                                    Value="{x:Bind Value, Mode=TwoWay}" />
                                                <Grid
                                                    Grid.Row="1"
                                                    MinHeight="38"
                                                    HorizontalAlignment="Stretch"
                                                    Visibility="{x:Bind SliderSettingsVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock
                                                            x:Uid="MinTextBlock"
                                                            Padding="0,0,0,8"
                                                            VerticalAlignment="Bottom"
                                                            FontWeight="SemiBold" />
                                                        <TextBox
                                                            x:Name="MinTextBox"
                                                            MaxWidth="96"
                                                            GotFocus="TextBoxGotFocus"
                                                            KeyDown="TextBoxKeyDown"
                                                            LosingFocus="TextBoxLosingFocus"
                                                            Style="{StaticResource VariableTextBoxStyle}"
                                                            Text="{x:Bind Min, Mode=OneWay}" />
                                                    </StackPanel>
                                                    <StackPanel
                                                        Grid.Column="1"
                                                        HorizontalAlignment="Center"
                                                        Orientation="Horizontal">
                                                        <TextBlock
                                                            x:Uid="StepTextBlock"
                                                            Padding="0,0,0,8"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Bottom"
                                                            FontWeight="SemiBold" />
                                                        <TextBox
                                                            x:Name="StepTextBox"
                                                            MaxWidth="96"
                                                            HorizontalAlignment="Center"
                                                            GotFocus="TextBoxGotFocus"
                                                            KeyDown="TextBoxKeyDown"
                                                            LosingFocus="TextBoxLosingFocus"
                                                            Style="{StaticResource VariableTextBoxStyle}"
                                                            Text="{x:Bind Step, Mode=OneWay}" />
                                                    </StackPanel>
                                                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                                                        <TextBlock
                                                            x:Uid="MaxTextBlock"
                                                            Padding="0,0,0,8"
                                                            VerticalAlignment="Bottom"
                                                            FontWeight="SemiBold" />
                                                        <TextBox
                                                            x:Name="MaxTextBox"
                                                            MaxWidth="96"
                                                            GotFocus="TextBoxGotFocus"
                                                            KeyDown="TextBoxKeyDown"
                                                            LosingFocus="TextBoxLosingFocus"
                                                            Style="{StaticResource VariableTextBoxStyle}"
                                                            Text="{x:Bind Max, Mode=OneWay}" />
                                                    </StackPanel>
                                                </Grid>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button
                        x:Name="ActiveTracing"
                        MinWidth="44"
                        MinHeight="44"
                        Margin="0,0,4,0"
                        Click="OnActiveTracingClick"
                        RequestedTheme="Light"
                        Style="{StaticResource GraphButtonStyle}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE73F;" />
                    </Button>

                    <Button
                        x:Name="Share"
                        MinWidth="44"
                        MinHeight="44"
                        Margin="0"
                        Click="OnShareClick"
                        RequestedTheme="Light"
                        Style="{StaticResource GraphButtonStyle}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE72D;" />
                    </Button>
                </StackPanel>

                <StackPanel
                    Grid.Row="0"
                    Margin="0,0,12,12"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Orientation="Vertical">

                    <RepeatButton
                        x:Uid="zoomInButton"
                        MinWidth="44"
                        MinHeight="44"
                        Margin="0,0,0,4"
                        AutomationProperties.AutomationId="zoomInButton"
                        Command="{x:Bind ZoomInButtonPressed, Mode=OneTime}"
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        RequestedTheme="Light"
                        Style="{ThemeResource GraphRepeatButtonStyle}">
                        <Grid>
                            <FontIcon
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                FontSize="26"
                                FontWeight="ExtraLight"
                                Glyph="&#xEA3A;" />
                            <FontIcon
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                FontSize="16"
                                Glyph="&#xE710;" />
                        </Grid>
                    </RepeatButton>

                    <RepeatButton
                        x:Uid="zoomOutButton"
                        MinWidth="44"
                        MinHeight="44"
                        Margin="0,0,0,4"
                        AutomationProperties.AutomationId="zoomOutButton"
                        Command="{x:Bind ZoomOutButtonPressed, Mode=OneTime}"
                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                        RequestedTheme="Light"
                        Style="{ThemeResource GraphRepeatButtonStyle}">
                        <Grid>
                            <FontIcon
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                FontSize="26"
                                FontWeight="ExtraLight"
                                Glyph="&#xEA3A;" />
                            <FontIcon
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                FontSize="16"
                                Glyph="&#xE738;" />
                        </Grid>
                    </RepeatButton>

                    <Button
                        x:Uid="zoomResetButton"
                        MinWidth="44"
                        MinHeight="44"
                        Margin="0,0,0,0"
                        AutomationProperties.AutomationId="zoomResetButton"
                        Command="{x:Bind ZoomResetButtonPressed, Mode=OneTime}"
                        RequestedTheme="Light"
                        Style="{ThemeResource GraphButtonStyle}">
                        <Grid>
                            <FontIcon
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                FontSize="26"
                                FontWeight="ExtraLight"
                                Glyph="&#xEA3A;" />
                            <FontIcon
                                FontFamily="{StaticResource SymbolThemeFontFamily}"
                                FontSize="16"
                                Glyph="&#xE895;" />
                        </Grid>

                    </Button>
                </StackPanel>

                <Popup
                    x:Name="TraceValuePopup"
                    Grid.Row="0"
                    RenderTransformOrigin="0,1">
                    <Popup.RenderTransform>
                        <TranslateTransform x:Name="TraceValuePopupTransform" X="50" Y="150" />
                    </Popup.RenderTransform>
                    <Grid
                        Background="{StaticResource ToolTipBackground}"
                        BorderBrush="{StaticResource ToolTipBorderBrush}"
                        BorderThickness="3,3,3,3">
                        <TextBlock
                            x:Name="TraceValue"
                            Margin="5,5,5,5"
                            Foreground="{StaticResource ToolTipForeground}"
                            Text="x=0,y=0" />
                    </Grid>
                </Popup>

            </Grid>

        </Grid>

        <!--  Right portion of the screen  -->
        <Grid
            x:Name="RightGrid"
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="1"
            Margin="0,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*" />
                <RowDefinition Height="3*" />
            </Grid.RowDefinitions>

            <!--  Ideally the KeyGraphFeaturesPanel should be a frame so that navigation to and from the panel could be handled nicely  -->
            <local:KeyGraphFeaturesPanel
                x:Name="KeyGraphFeaturesControl"
                Grid.RowSpan="2"
                KeyGraphFeaturesClosed="OnKeyGraphFeaturesClosed"
                ViewModel="{x:Bind EquationInputAreaControl.EquationVM, Mode=OneWay}"
                Visibility="{x:Bind IsKeyGraphFeaturesVisible, Mode=OneWay}" />
            <Grid x:Name="EquationInputAreaGrid" Visibility="{x:Bind IsKeyGraphFeaturesVisible, Converter={StaticResource BooleanToVisibilityNegationConverter}, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <local:EquationInputArea
                    x:Name="EquationInputAreaControl"
                    Grid.Row="1"
                    Margin="0,8,0,0"
                    Equations="{x:Bind ViewModel.Equations}"
                    KeyGraphFeaturesVisibilityChanged="OnEquationKeyGraphFeaturesVisibilityChanged" />
            </Grid>

            <Grid
                x:Name="ButtonContainerGrid"
                Grid.Row="1"
                Margin="2,0,2,2"
                UseLayoutRounding="False"
                Visibility="{x:Bind IsKeyGraphFeaturesVisible, Converter={StaticResource BooleanToVisibilityNegationConverter}, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <controls:CalculatorButton
                    x:Name="XButton"
                    x:Uid="xButton"
                    Grid.Row="0"
                    Grid.Column="0"
                    ButtonId="X"
                    Content="𝑥"
                    FlowDirection="LeftToRight"
                    FontSize="16"
                    Style="{StaticResource OperatorButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="YButton"
                    x:Uid="yButton"
                    Grid.Row="0"
                    Grid.Column="1"
                    ButtonId="Y"
                    Content="𝑦"
                    FlowDirection="LeftToRight"
                    FontSize="16"
                    Style="{StaticResource OperatorButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="PowerButton"
                    x:Uid="graphingPowerButton"
                    Grid.Row="0"
                    Grid.Column="2"
                    ButtonId="XPowerY"
                    Content="^"
                    Style="{StaticResource OperatorButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="squareRootButton"
                    x:Uid="squareRootButton"
                    Grid.Row="0"
                    Grid.Column="3"
                    ButtonId="Sqrt"
                    Content="&#xE94B;"
                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                    Style="{StaticResource SymbolOperatorButtonStyle}" />

                <!--  Display controls  -->
                <controls:CalculatorButton
                    x:Name="ClearButton"
                    x:Uid="clearButton"
                    Grid.Row="1"
                    Grid.Column="2"
                    ButtonId="Clear"
                    Content="C"
                    FontSize="16"
                    Style="{StaticResource OperatorButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="BackSpaceButton"
                    x:Uid="backSpaceButton"
                    Grid.Row="1"
                    Grid.Column="3"
                    ButtonId="Backspace"
                    Content="&#xE94F;"
                    FontSize="16"
                    Style="{StaticResource SymbolOperatorButtonStyle}" />

                <!--  Basic operators  -->
                <controls:CalculatorButton
                    x:Name="EqualButton"
                    x:Uid="graphingEqualButton"
                    Grid.Row="0"
                    Grid.Column="4"
                    ButtonId="Equals"
                    Content="&#xE94E;"
                    Style="{StaticResource AccentCalcButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="DivideButton"
                    x:Uid="divideButton"
                    Grid.Row="1"
                    Grid.Column="4"
                    ButtonId="Divide"
                    Content="&#xE94A;"
                    Style="{StaticResource AccentCalcButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="MultiplyButton"
                    x:Uid="multiplyButton"
                    Grid.Row="2"
                    Grid.Column="4"
                    ButtonId="Multiply"
                    Content="&#xE947;"
                    Style="{StaticResource AccentCalcButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="MinusButton"
                    x:Uid="minusButton"
                    Grid.Row="3"
                    Grid.Column="4"
                    ButtonId="Subtract"
                    Content="&#xE949;"
                    Style="{StaticResource AccentCalcButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="PlusButton"
                    x:Uid="plusButton"
                    Grid.Row="4"
                    Grid.Column="4"
                    ButtonId="Add"
                    Content="&#xE948;"
                    Style="{StaticResource AccentCalcButtonStyle}" />


                <controls:CalculatorButton
                    x:Name="logBase10Button"
                    x:Uid="logBase10Button"
                    Grid.Row="1"
                    Grid.Column="0"
                    ButtonId="LogBase10"
                    Content="log"
                    Style="{StaticResource OperatorButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="logBaseEButton"
                    x:Uid="logBaseEButton"
                    Grid.Row="1"
                    Grid.Column="1"
                    ButtonId="LogBaseE"
                    Content="ln"
                    Style="{StaticResource OperatorButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="powerOf10Button"
                    x:Uid="powerOf10Button"
                    Grid.Row="2"
                    Grid.Column="0"
                    AutomationProperties.AutomationId="powerOf10Button"
                    ButtonId="TenPowerX"
                    Content="&#xF7CC;"
                    Style="{StaticResource SymbolOperatorButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="powerOfEButton"
                    x:Uid="powerOfEButton"
                    Grid.Row="3"
                    Grid.Column="0"
                    ButtonId="EPowerX"
                    Content="&#xf7ce;"
                    Style="{StaticResource SymbolOperatorButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="piButton"
                    x:Uid="piButton"
                    Grid.Row="4"
                    Grid.Column="0"
                    ButtonId="Pi"
                    Content="&#xf7cf;"
                    FontSize="14"
                    Style="{StaticResource SymbolOperatorButtonStyle}" />

                <controls:CalculatorButton
                    x:Name="openParenthesisButton"
                    x:Uid="openParenthesisButton"
                    Grid.Row="5"
                    Grid.Column="0"
                    ButtonId="OpenParenthesis"
                    Content="("
                    FontSize="19"
                    Style="{StaticResource ParenthesisCalcButtonStyle}" />
                <controls:CalculatorButton
                    x:Name="closeParenthesisButton"
                    x:Uid="closeParenthesisButton"
                    Grid.Row="5"
                    Grid.Column="1"
                    ButtonId="CloseParenthesis"
                    Content=")"
                    FontSize="19"
                    Style="{StaticResource OperatorButtonStyle}" />

                <!--  The Numberpad  -->
                <local:NumberPad
                    x:Name="NumberPad"
                    x:Uid="NumberPad"
                    Grid.Row="2"
                    Grid.RowSpan="4"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    ButtonStyle="{StaticResource NumericButtonStyle24}" />

                <controls:CalculatorButton
                    x:Name="PlotButton"
                    x:Uid="plotButton"
                    Grid.Row="5"
                    Grid.Column="4"
                    ButtonId="Plot"
                    Content="&#xE72A;"
                    FontFamily="{StaticResource SymbolThemeFontFamily}"
                    Style="{StaticResource AccentCalcButtonStyle}" />
            </Grid>
        </Grid>
    </Grid>
</UserControl>
